#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;

// Output data ; will be interpolated for each fragment.
out vec2 UV;
// Values that stay constant for the whole mesh.
//uniform mat4 MVP;
uniform mat4 Position;
uniform mat4 Scale;
uniform mat4 Rotation;
uniform mat4 View;
uniform mat4 Projection;

void main(){
  mat4 MVP = Projection * View * Position * Rotation * Scale;
	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
  UV = 1 - vertexUV;
}

